// Place your key bindings in this file to override the defaults
[
    {
      "key": "f2",
      "command": "renameFile",
      "when": "explorerViewletVisible && filesExplorerFocus"
    },
    {
      "key": "enter",
      "command": "-renameFile",
      "when": "explorerViewletVisible && filesExplorerFocus"
    },
    {
      "key": "enter",
      "command": "list.select",
      "when": "listFocus && !inputFocus"
    },
    {
      "key": "ctrl+w",
      "command": "-workbench.action.closeActiveEditor"
    },
    {
      "key": "f11",
      "command": "-workbench.action.toggleFullScreen",
      "when": "!isIOS"
    },
    {
      "key": "ctrl+`",
      "command": "-workbench.action.terminal.toggleTerminal",
      "when": "terminal.active"
    },
    {
      "key": "ctrl+j",
      "command": "-editor.action.joinLines",
      "when": "editorTextFocus && !editorReadonly"
    },
    {
      "key": "ctrl+j",
      "command": "-extension.vim_ctrl+j",
      "when": "editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"
    },
    {
      "key": "ctrl+j",
      "command": "workbench.action.previousEditor"
    },
    {
      "key": "shift+cmd+[",
      "command": "-workbench.action.previousEditor"
    },
    {
      "key": "ctrl+k",
      "command": "-deleteAllRight",
      "when": "textInputFocus && !editorReadonly"
    },
    {
      "key": "ctrl+k",
      "command": "-extension.vim_ctrl+k",
      "when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"
    },
    {
      "key": "ctrl+k",
      "command": "workbench.action.nextEditor"
    },
    {
      "key": "shift+cmd+]",
      "command": "-workbench.action.nextEditor"
    },
    {
      "key": "cmd+d",
      "command": "-editor.action.addSelectionToNextFindMatch",
      "when": "editorFocus"
    },
    {
      "key": "cmd+i",
      "command": "workbench.action.focusActiveEditorGroup",
      "when": "!editorFocus"
    },
    {
      "key": "cmd+d",
      "command": "-extension.vim_cmd+d",
      "when": "editorTextFocus && vim.active && vim.use<D-d> && !inDebugRepl"
    },
    {
      "key": "cmd+d",
      "command": "workbench.panel.repl.view.focus"
    },
    {
      "key": "f3",
      "command": "-workbench.action.terminal.findNext",
      "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
      "key": "cmd+t",
      "command": "-workbench.action.showAllSymbols"
    },
    {
      "key": "shift+cmd+]",
      "command": "-workbench.action.terminal.focusNext",
      "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
      "key": "alt+cmd+down",
      "command": "-workbench.action.terminal.focusNextPane",
      "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
      "key": "cmd+t",
      "command": "terminal.focus"
    },
    {
      "key": "shift+cmd+c",
      "command": "-workbench.action.terminal.openNativeConsole",
      "when": "!terminalFocus"
    },
    {
      "key": "shift+cmd+t",
      "command": "workbench.action.terminal.new",
      "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    {
      "key": "ctrl+shift+`",
      "command": "-workbench.action.terminal.new",
      "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    {
      "key": "shift+cmd+g",
      "command": "workbench.view.scm",
      "when": "workbench.scm.active"
    },
    {
      "key": "ctrl+shift+g",
      "command": "-workbench.view.scm",
      "when": "workbench.scm.active"
    },
    {
      "key": "shift+cmd+g",
      "command": "-editor.action.previousMatchFindAction",
      "when": "editorFocus"
    },
    {
      "key": "shift+cmd+g",
      "command": "-workbench.action.terminal.findPrevious",
      "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
      "key": "ctrl+l",
      "command": "-extension.vim_navigateCtrlL",
      "when": "editorTextFocus && vim.active && vim.use<C-l> && !inDebugRepl"
    },
    {
      "key": "ctrl+l",
      "command": "-notebook.centerActiveCell",
      "when": "notebookEditorFocused"
    },
    {
      "key": "ctrl+l",
      "command": "workbench.debug.panel.action.clearReplAction"
    },
    {
      "key": "ctrl+alt+j",
      "command": "workbench.action.moveEditorLeftInGroup"
    },
    {
      "key": "cmd+k shift+cmd+left",
      "command": "-workbench.action.moveEditorLeftInGroup"
    },
    {
      "key": "ctrl+alt+k",
      "command": "workbench.action.moveEditorRightInGroup"
    },
    {
      "key": "cmd+k shift+cmd+right",
      "command": "-workbench.action.moveEditorRightInGroup"
    },
    {
      "key": "ctrl+alt+j",
      "command": "-notebook.cell.joinBelow",
      "when": "notebookEditorFocused"
    },
    {
      "key": "cmd+i",
      "command": "-markdown.extension.editing.toggleItalic",
      "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
    },
    {
      "key": "cmd+k",
      "command": "-workbench.action.terminal.clear",
      "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
      "key": "cmd+shift+u",
      "command": "workbench.view.extension.test",
      "when": "workbench.view.extension.test != null"
    },
    {
      "key": "alt+f5",
      "command": "testing.debugAtCursor",
      "when": "editorTextFocus"
    },
    {
      "key": "cmd+; cmd+c",
      "command": "-testing.debugAtCursor",
      "when": "editorTextFocus"
    },
    {
      "key": "cmd+r",
      "command": "workbench.action.reloadWindow",
      "when": "editorFocus"
    },
    {
      "key": "cmd+,",
      "command": "workbench.action.openSettingsJson"
    },
    {
      "key": "cmd+shift+,",
      "command": "workbench.action.openGlobalKeybindingsFile"
    },
    {
      "key": "cmd+k",
      "command": "workbench.action.showCommands"
    },
    {
      "key": "ctrl+shift+k",
      "command": "workbench.action.increaseViewSize"
    },
    {
      "key": "ctrl+shift+j",
      "command": "workbench.action.decreaseViewSize"
    },
    // {
    //   "key": "cmd+k",
    //   "command": "workbench.action.showCommands"
    // },
    // {
    //   "key": "shift+cmd+p",
    //   "command": "-workbench.action.showCommands"
    // },
    //   {
    //     "key": "f1",
    //     // Go to current debugging position
    //     "command": "extension.multiCommand.execute",
    //     "args": {
    //       "sequence": [
    //         "workbench.debug.action.focusCallStackView",
    //         "list.clear",
    //         "list.focusFirst",
    //         "list.select",
    //         "workbench.files.action.focusOpenEditorsView"
    //       ]
    //     }
    // },

    /// Magit !
    {
      "key": "g g",
      "command": "cursorTop",
      "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/" 
   },
   { "key": "g r",
      "command": "magit.refresh",
      "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/" 
   },
   {
     "key": "tab",
     "command": "extension.vim_tab",
     "when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert' && editorLangId != 'magit'"
   },
   {
     "key": "tab",
     "command": "-extension.vim_tab",
     "when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
   },
   {
     "key": "x",
     "command": "magit.discard-at-point",
     "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
   },
   {
     "key": "k",
     "command": "-magit.discard-at-point"
   },
   {
     "key": "-",
     "command": "magit.reverse-at-point",
     "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
   },
   {
     "key": "v",
     "command": "-magit.reverse-at-point"
   },
   {
     "key": "shift+-",
     "command": "magit.reverting",
     "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
   },
   {
     "key": "shift+v",
     "command": "-magit.reverting"
   },
   {
     "key": "shift+o",
     "command": "magit.resetting",
     "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
   },
   {
     "key": "shift+x",
     "command": "-magit.resetting"
   },
   {
     "key": "x",
     "command": "-magit.reset-mixed"
   },
   {
     "key": "ctrl+u x",
     "command": "-magit.reset-hard"
   },
   // Navigating in lists
  {
    "key": "alt+j",
    "command": "workbench.action.quickOpenNavigateNext",
    "when": "inQuickOpen"
},
{
    "key": "alt+k",
    "command": "workbench.action.quickOpenNavigatePrevious",
    "when": "inQuickOpen"
},
// Down Motion
{
  "key": "alt+j",
  "command": "cursorDown",
  "when": "textInputFocus"
},
{
  "key": "alt+j",
  "command": "showNextParameterHint",
  "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
},
{
  "key": "alt+j",
  "command": "selectNextSuggestion",
  "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
},
{
  "key": "alt+j",
  "command": "list.focusDown",
  "when": "listFocus && !inputFocus"
},
{
  "key": "alt+j",
  "command": "workbench.action.quickOpenSelectNext",
  "when": "inQuickOpen"
},

// Up Motion
{
  "key": "alt+k",
  "command": "cursorUp",
  "when": "textInputFocus"
},
{
  "key": "alt+k",
  "command": "showPrevParameterHint",
  "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
},
{
  "key": "alt+k",
  "command": "selectPrevSuggestion",
  "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
},
{
  "key": "alt+k",
  "command": "list.focusUp",
  "when": "listFocus && !inputFocus"
},
{
  "key": "alt+k",
  "command": "workbench.action.quickOpenSelectPrevious",
  "when": "inQuickOpen"
},
   // Fix tab in magit 
   {
    "key": "tab",
    "command": "extension.vim_tab",
    "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert' && editorLangId != 'magit'"
  },
  {
    "key": "tab",
    "command": "-extension.vim_tab",
    "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
  },
   ///
  ]
